flowchart TD
    subgraph ProjectMemoryBank [Memory Bank - Single Source of Truth]
        direction LR
        K1[projectbrief.md]
        K2[productContext.md]
        K3[systemPatterns.md]
        K4[techContext.md]
        K5[activeContext.md]
        K6[progress.md]
        K_Env[.env]
        K_Logs[logs/]
        K_Tmpl[templates/]
        K_Other[...]
    end

    subgraph BoomerangOrchestration [Boomerang Orchestration Process]
        direction TB
        A["Start | Receive User Request"] --> B_delegate[Delegate Initial Memory Review/Setup Task]
        B_delegate --> B_exec["MemoryKeeper: Read Context / Create Files"]
        B_exec --> B_res["MemoryKeeper: Return Context / Confirm Setup"]
        B_res -- Provides Initial Context --> C["Atom-of-Thought Breakdown & Evaluation"]

        C --> D[Select Appropriate Specialized Mode]
        D --> J[Formulate Subtask Instructions]

        subgraph SubtaskInstructionDetails [Instructions for Delegated Mode]
            direction TB
            J1["Context (Initial & Ongoing)"]
            J2[Clearly Defined Scope]
            J_EnvAware[Note: Environment Assumptions]
            J3[Constraint: Only Perform Outlined Work]
            J_Safety[Constraint: Safety Check before Risky Tools]
            J_Idem[Note: Strive for Idempotency/Minimal Side Effects]
            J4[Requirement: Signal Completion via 'attempt_completion']
            J4a[Requirement: Report Failures via 'attempt_completion' w/ Details]
            J5["Requirement: Provide Concise Result Summary (Success/Failure)"]
            J6[Rule: These Instructions Override Mode Defaults]
        end

        J --> D_delegate[Delegate Subtask via 'new_task' Tool]
        D_delegate --> S[Specialized Mode Executes Primary Atomic Subtask]

        %% --- Safety Check Loop ---
        S --> S_check{Risky Tool Use?}
        S_check -- Yes --> S_ask[Subtask asks Boomerang]
        S_ask --> E_q[Boomerang Evaluates Safety]
        E_q --> S_confirm[Boomerang Confirms/Denies]
        S_confirm --> S
        %% --- Safety Check Loop END ---

        S_check -- No --> S_comp["Subtask Signals Completion ('attempt_completion')"]

        S_comp --> S_res["Subtask Provides Concise Result Summary (Success/Failure)"]
        S_res --> E[Boomerang: Monitor & Analyze Concise Result]

        %% --- Conditional Logging START ---
        E --> E_checkEnv[Delegate: Read DEBUG_MODE from K_Env]
        E_checkEnv --> E_envRes[MemoryKeeper Returns DEBUG_MODE Status]
        E_envRes --> E_debugDecision{DEBUG_MODE == TRUE?}

        E_debugDecision -- Yes --> L_delegate_report["Delegate Reporting Task\n(to Original Mode)"]
        L_delegate_report --> L_report_exec["Original Mode: Fill Template\n(Reads K_Tmpl, uses task context)"]
        L_report_exec --> L_report_res["Original Mode: Return Filled Template (JSON)"]

        L_report_res -- Provides Filled Template --> L_delegate_log["Delegate Logging Task\n(to RooLogger)"]
        L_delegate_log --> L_exec["RooLogger: Append JSON to Log File (in K_Logs)"]
        L_exec --> L_res["RooLogger: Confirm Log Append"]
        L_res --> F 

        E_debugDecision -- No --> F
        %% --- Conditional Logging END ---


        F{"Significant Result | Decision | State Change Requiring Immediate Core Memory Update?"}
        F -- Yes --> I_delegate[Delegate Core Memory Update Task]
        I_delegate --> I_exec["MemoryKeeper Updates Core File(s) (K1-K6)"]
        I_exec --> G

        F -- No --> G


        G{All Subtasks for Current Goal / Phase Completed?}
        G -- No --> C
        G -- Yes --> H[Boomerang: Synthesize Results for Completed Goal]
        H --> I_final_delegate[Delegate Final/Comprehensive Memory Update Task]
        I_final_delegate --> I_final_exec[MemoryKeeper Performs Comprehensive Update]
        I_final_exec --> Z["Goal Complete | Report Synthesis to User | Await Next Major Task"]
    end

    %% --- Connections ---
    B_exec -- Updates/Reads --> ProjectMemoryBank
    L_report_exec -- Reads --> K_Tmpl
    L_exec -- Writes --> K_Logs
    I_exec -- Updates --> ProjectMemoryBank
    I_final_exec -- Updates --> ProjectMemoryBank


    %% --- Styling ---
    classDef process fill:#e6f5d0,stroke:#6b8e23,stroke-width:2px
    classDef decision fill:#fffacd,stroke:#daa520,stroke-width:2px
    classDef memory fill:#ffe4e1,stroke:#cd5c5c,stroke-width:2px
    classDef instruction fill:#f0f8ff,stroke:#4682b4,stroke-width:2px
    classDef subtask fill:#fff8dc,stroke:#b8860b,stroke-width:2px,stroke-dasharray:5 5
    classDef delegate fill:#e0ffff,stroke:#008b8b,stroke-width:2px
    classDef safety fill:#fff0f5,stroke:#ff69b4,stroke-width:2px
    classDef initial_mem fill:#f5f5dc,stroke:#8b4513,stroke-width:2px
    classDef logging fill:#fafad2,stroke:#b0e0e6,stroke-width:2px
    classDef report fill:#e6e6fa,stroke:#9370db,stroke-width:2px

    class A,C,D,E,H,Z process
    class F,G,S_check,E_debugDecision decision
    class ProjectMemoryBank,K1,K2,K3,K4,K5,K6,K_Env,K_Logs,K_Tmpl,K_Other,I_exec,I_final_exec memory
    class J,J1,J2,J3,J4,J4a,J5,J6,J_EnvAware,J_Safety,J_Idem instruction
    class S,S_comp,S_res subtask
    class D_delegate,I_delegate,I_final_delegate,B_delegate,L_delegate_report,L_delegate_log,E_checkEnv delegate
    class S_ask,E_q,S_confirm safety
    class B_exec,B_res initial_mem
    class L_report_exec,L_report_res report
    class L_exec,L_res logging
    class E_envRes initial_mem